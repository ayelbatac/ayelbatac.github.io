node_sizes <- ifelse(nodes$name %in% key_nodes, 16, 10)
# Plot the graph
graph %>%
ggraph(layout = 'fr') +
geom_edge_link(
color      = 'black',
edge_alpha = 0.5
) +
geom_node_point(aes(color = Legend), size = node_sizes) +
geom_node_text(
aes(label = name),
repel         = TRUE,
size          = 8,
segment.size  = 0.2,
box.padding   = unit(0.5,'lines'),
point.padding = unit(0.5,'lines')
) +
scale_color_manual(
name   = "Legend",
values = group_palette,
guide  = guide_legend(override.aes = list(size = 8))
) +
theme_void() +
theme(
legend.key.size = unit(4, "lines"),
legend.text     = element_text(size = 22),
legend.title    = element_text(size = 22),
plot.margin     = unit(c(1, 1, 4, 1), "lines")
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(ggraph)
library(igraph)
library(tidygraph)
library(ggplot2)
# Define nodes with groups for coloring
nodes <- data.frame(
name = c(
"Planning and Implementation",
"Community Engagement",
"Government of Nunavut",
"Project Advisor",
"Nunavut Tunngavik Inc.",
"Community Health Centre",
"Hamlet Office",
"Elders",
"Local Radio Outreach",
"School Visits",
"Community Feast",
"Games and Open Houses",
"Field Epidemiologists",
"Nurses",
"Laboratory Technicians",
"X-ray Technician",
"Physicians",
"Clerk Interpreters",
"Driver and Custodians",
"Indigenous Services Canada",
"Public Health Agency of Canada",
"National Microbiology Laboratory",
"Canadian Red Cross"
),
Legend = c(
"Government", "Government",
"Government", "Government",
"Partners", "Government",
"Community Partners", "Community Partners",
"Engagement", "Engagement", "Engagement", "Engagement",
"Government", "Government", "Government", "Government",
"Government", "Government", "Government",
"Partners", "Partners", "Partners", "Partners"
),
stringsAsFactors = FALSE
)
# Define edges
edges <- data.frame(
from = c(
"Planning and Implementation", "Planning and Implementation", "Planning and Implementation",
rep("Community Engagement", 6),
rep("Community Health Centre", 7),
"Community Engagement",
rep(c("Indigenous Services Canada","Public Health Agency of Canada","National Microbiology Laboratory","Canadian Red Cross"), each = 1),
"Nunavut Tunngavik Inc.", "Nunavut Tunngavik Inc."
),
to = c(
"Government of Nunavut","Project Advisor","Community Health Centre",
"Government of Nunavut","Hamlet Office","Elders","Local Radio Outreach","School Visits","Community Feast",
"Field Epidemiologists","Nurses","Laboratory Technicians","X-ray Technician","Physicians","Clerk Interpreters","Driver and Custodians",
"Games and Open Houses",
rep("Government of Nunavut", 4),
"Government of Nunavut","Community Engagement"
),
stringsAsFactors = FALSE
)
# Create network object
graph <- tbl_graph(nodes = nodes, edges = edges, directed = TRUE)
# Define group color palette
group_palette <- c(
"Government" = "#13528c",
"Partners"   = "#FF0000",
"Community Partners"  = "#ffb703",
"Engagement" = "#00b4d8"
)
# Emphasize key nodes sizes
key_nodes <- c("Planning and Implementation","Community Engagement","Government of Nunavut")
node_sizes <- ifelse(nodes$name %in% key_nodes, 16, 10)
# Plot the graph
graph %>%
ggraph(layout = 'fr') +
geom_edge_link(
color      = 'black',
edge_alpha = 0.5
) +
geom_node_point(aes(color = Legend), size = node_sizes) +
geom_node_text(
aes(label = name),
repel         = TRUE,
size          = 8,
segment.size  = 0.2,
box.padding   = unit(0.5,'lines'),
point.padding = unit(0.5,'lines')
) +
scale_color_manual(
name   = "Legend",
values = group_palette,
guide  = guide_legend(override.aes = list(size = 8))
) +
theme_void() +
theme(
legend.key.size = unit(4, "lines"),
legend.text     = element_text(size = 22),
legend.title    = element_text(size = 22),
plot.margin     = unit(c(1, 1, 4, 1), "lines")
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(ggraph)
library(igraph)
library(tidygraph)
library(ggplot2)
# Define nodes with groups for coloring
nodes <- data.frame(
name = c(
"Planning and Implementation",
"Community Engagement",
"Government of Nunavut",
"Project Advisor",
"Nunavut Tunngavik Inc.",
"Community Health Centre",
"Hamlet Office",
"Elders",
"Local Radio Outreach",
"School Visits",
"Community Feast",
"Games and Open Houses",
"Field Epidemiologists",
"Nurses",
"Laboratory Technicians",
"X-ray Technician",
"Physicians",
"Clerk Interpreters",
"Driver and Custodians",
"Indigenous Services Canada",
"Public Health Agency of Canada",
"National Microbiology Laboratory",
"Canadian Red Cross"
),Legend = c(
"Government",        # Planning and Implementation
"Engagement",        # Community Engagement node
"Government",        # Government of Nunavut
"Government",        # Project Advisor
"Partners",          # Nunavut Tunngavik Inc.
"Government",        # Community Health Centre
"Engagement",        # Hamlet Office
"Engagement",        # Elders
"Engagement",        # Local Radio Outreach
"Engagement",        # School Visits
"Engagement",        # Community Feast
"Engagement",        # Games and Open Houses
"Government",        # Field Epidemiologists
"Government",        # Nurses
"Government",        # Laboratory Technicians
"Government",        # X-ray Technician
"Government",        # Physicians
"Government",        # Clerk Interpreters
"Government",        # Driver and Custodians
"Partners",          # Indigenous Services Canada
"Partners",          # Public Health Agency of Canada
"Partners",          # National Microbiology Laboratory
"Partners"           # Canadian Red Cross
),
stringsAsFactors = FALSE
)
# Define edges
edges <- data.frame(
from = c(
"Planning and Implementation", "Planning and Implementation", "Planning and Implementation",
rep("Community Engagement", 6),
rep("Community Health Centre", 7),
"Community Engagement",
rep(c("Indigenous Services Canada","Public Health Agency of Canada","National Microbiology Laboratory","Canadian Red Cross"), each = 1),
"Nunavut Tunngavik Inc.", "Nunavut Tunngavik Inc."
),
to = c(
"Government of Nunavut","Project Advisor","Community Health Centre",
"Government of Nunavut","Hamlet Office","Elders","Local Radio Outreach","School Visits","Community Feast",
"Field Epidemiologists","Nurses","Laboratory Technicians","X-ray Technician","Physicians","Clerk Interpreters","Driver and Custodians",
"Games and Open Houses",
rep("Government of Nunavut", 4),
"Government of Nunavut","Community Engagement"
),
stringsAsFactors = FALSE
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(ggraph)
library(igraph)
library(tidygraph)
library(ggplot2)
# Define nodes with groups for coloring
nodes <- data.frame(
name = c(
"Planning and Implementation",
"Community Engagement",
"Government of Nunavut",
"Project Advisor",
"Nunavut Tunngavik Inc.",
"Community Health Centre",
"Hamlet Office",
"Elders",
"Local Radio Outreach",
"School Visits",
"Community Feast",
"Games and Open Houses",
"Field Epidemiologists",
"Nurses",
"Laboratory Technicians",
"X-ray Technician",
"Physicians",
"Clerk Interpreters",
"Driver and Custodians",
"Indigenous Services Canada",
"Public Health Agency of Canada",
"National Microbiology Laboratory",
"Canadian Red Cross"
),Legend = c(
"Government",        # Planning and Implementation
"Engagement",        # Community Engagement node
"Government",        # Government of Nunavut
"Government",        # Project Advisor
"Partners",          # Nunavut Tunngavik Inc.
"Government",        # Community Health Centre
"Engagement",        # Hamlet Office
"Engagement",        # Elders
"Engagement",        # Local Radio Outreach
"Engagement",        # School Visits
"Engagement",        # Community Feast
"Engagement",        # Games and Open Houses
"Government",        # Field Epidemiologists
"Government",        # Nurses
"Government",        # Laboratory Technicians
"Government",        # X-ray Technician
"Government",        # Physicians
"Government",        # Clerk Interpreters
"Government",        # Driver and Custodians
"Partners",          # Indigenous Services Canada
"Partners",          # Public Health Agency of Canada
"Partners",          # National Microbiology Laboratory
"Partners"           # Canadian Red Cross
),
stringsAsFactors = FALSE
)
# Define edges
edges <- data.frame(
from = c(
"Planning and Implementation", "Planning and Implementation", "Planning and Implementation",
rep("Community Engagement", 6),
rep("Community Health Centre", 7),
"Community Engagement",
rep(c("Indigenous Services Canada","Public Health Agency of Canada","National Microbiology Laboratory","Canadian Red Cross"), each = 1),
"Nunavut Tunngavik Inc.", "Nunavut Tunngavik Inc."
),
to = c(
"Government of Nunavut","Project Advisor","Community Health Centre",
"Government of Nunavut","Hamlet Office","Elders","Local Radio Outreach","School Visits","Community Feast",
"Field Epidemiologists","Nurses","Laboratory Technicians","X-ray Technician","Physicians","Clerk Interpreters","Driver and Custodians",
"Games and Open Houses",
rep("Government of Nunavut", 4),
"Government of Nunavut","Community Engagement"
),
stringsAsFactors = FALSE
)
# Build graph object
graph <- tbl_graph(nodes = nodes, edges = edges, directed = TRUE)
# Create force-directed layout with more iterations for spacing
layout <- create_layout(graph, layout = 'fr', niter = 500)
# Define group color palette
group_palette <- c(
"Government" = "#13528c",
"Partners"   = "#FF0000",
"Engagement" = "#72CC50"
)
# Calculate node sizes to emphasize key components
key_nodes <- c("Planning and Implementation", "Community Engagement", "Government of Nunavut")
node_sizes <- ifelse(nodes$name %in% key_nodes, 16, 10)
# Plot the graph
layout %>%
ggraph() +
geom_edge_link(
color      = 'black',
edge_alpha = 0.5
) +
geom_node_point(aes(color = Legend), size = node_sizes) +
geom_node_text(
aes(label = name),
repel         = TRUE,
size          = 8,
segment.size  = 0.2,
box.padding   = unit(0.5, 'lines'),
point.padding = unit(0.5, 'lines')
) +
scale_color_manual(
name   = "Legend",
values = group_palette,
guide  = guide_legend(override.aes = list(size = 8))
) +
theme_void() +
theme(
legend.key.size = unit(4, "lines"),
legend.text     = element_text(size = 22),
legend.title    = element_text(size = 22),
plot.margin     = unit(c(1, 1, 4, 1), "lines")
)
# Anaphylaxis treatment model in R
# Parameters
weeks <- 52
population <- 1e6
reaction_rate <- 5 / 100000  # 5 reactions per 100k per week
treatment_rates <- c(0.4, 0.6, 0.8, 0.95)  # Access levels
# Store results in a list
results <- list()
# Simulation
for (rate in treatment_rates) {
weekly_reactions <- numeric(weeks)
treated <- numeric(weeks)
untreated <- numeric(weeks)
current_treated <- 0
current_untreated <- 0
for (week in 1:weeks) {
new_reactions <- floor(population * reaction_rate)
new_treated <- floor(new_reactions * rate)
new_untreated <- new_reactions - new_treated
current_treated <- current_treated + new_treated
current_untreated <- current_untreated + new_untreated
weekly_reactions[week] <- new_reactions
treated[week] <- current_treated
untreated[week] <- current_untreated
}
results[[as.character(rate)]] <- list(
treated = treated,
untreated = untreated,
weekly_reactions = weekly_reactions
)
}
# Install if needed: install.packages("ggplot2")
library(ggplot2)
# Prepare data for ggplot
plot_data <- data.frame()
for (rate in names(results)) {
weeks_seq <- 1:weeks
treated <- results[[rate]]$treated
untreated <- results[[rate]]$untreated
plot_data <- rbind(
plot_data,
data.frame(Week = weeks_seq, Count = treated, Group = paste0("Treated (", as.numeric(rate)*100, "% access)")),
data.frame(Week = weeks_seq, Count = untreated, Group = paste0("Untreated (", as.numeric(rate)*100, "% access)"))
)
}
# Plot
ggplot(plot_data, aes(x = Week, y = Count, color = Group, linetype = Group)) +
geom_line(size = 1) +
labs(title = "Cumulative Anaphylaxis Outcomes Over 1 Year",
x = "Week", y = "People") +
theme_minimal() +
scale_color_brewer(palette = "Set1")
# Print summary results
for (rate in names(results)) {
final_treated <- tail(results[[rate]]$treated, 1)
final_untreated <- tail(results[[rate]]$untreated, 1)
total <- final_treated + final_untreated
cat("Access rate:", as.numeric(rate)*100, "%\n")
cat("  Total cases:", total, "\n")
cat("  Treated:", final_treated, sprintf("(%.1f%%)\n", 100 * final_treated / total))
cat("  Untreated:", final_untreated, sprintf("(%.1f%%)\n\n", 100 * final_untreated / total))
}
# Anaphylaxis treatment model in R - Canada by Province
# Load libraries
library(ggplot2)
library(dplyr)
# Provincial populations (approximate, 2024)
province_data <- data.frame(
Province = c("Ontario", "Quebec", "British Columbia", "Alberta", "Manitoba",
"Saskatchewan", "Nova Scotia", "New Brunswick", "Newfoundland and Labrador",
"Prince Edward Island", "Yukon", "Northwest Territories", "Nunavut"),
Population = c(15000000, 8900000, 5300000, 4600000, 1400000,
1200000, 1000000, 800000, 500000,
170000, 44000, 45000, 40000),
AccessRate = c(0.80, 0.70, 0.75, 0.70, 0.60,
0.60, 0.65, 0.65, 0.65,
0.65, 0.50, 0.50, 0.50)
)
# Parameters
reaction_rate <- 50 / 100000  # annual incidence rate
mortality_rate <- 0.01  # 1% death rate if untreated
# Simulation over 1 year (no time steps here, total outcomes)
province_data <- province_data %>%
mutate(
Cases = floor(Population * reaction_rate),
Treated = floor(Cases * AccessRate),
Untreated = Cases - Treated,
Deaths = floor(Untreated * mortality_rate)
)
# Print results
print(province_data[, c("Province", "Cases", "Treated", "Untreated", "Deaths")])
# Plot treated vs. untreated per province
plot_data <- province_data %>%
select(Province, Treated, Untreated) %>%
tidyr::pivot_longer(cols = c("Treated", "Untreated"), names_to = "Outcome", values_to = "Count")
ggplot(plot_data, aes(x = reorder(Province, -Count), y = Count, fill = Outcome)) +
geom_bar(stat = "identity", position = "stack") +
coord_flip() +
labs(title = "Estimated Annual Anaphylaxis Outcomes by Province in Canada",
x = "Province", y = "Number of People") +
theme_minimal() +
scale_fill_brewer(palette = "Set1")
# Anaphylaxis compartmental treatment model in R - Canada by Province (Time-based)
# Load libraries
library(ggplot2)
library(dplyr)
library(tidyr)
# Provincial populations (approximate, 2024)
province_data <- data.frame(
Province = c("Ontario", "Quebec", "British Columbia", "Alberta", "Manitoba",
"Saskatchewan", "Nova Scotia", "New Brunswick", "Newfoundland and Labrador",
"Prince Edward Island", "Yukon", "Northwest Territories", "Nunavut"),
Population = c(15000000, 8900000, 5300000, 4600000, 1400000,
1200000, 1000000, 800000, 500000,
170000, 44000, 45000, 40000),
AccessRate = c(0.80, 0.70, 0.75, 0.70, 0.60,
0.60, 0.65, 0.65, 0.65,
0.65, 0.50, 0.50, 0.50)
)
# Parameters
total_weeks <- 52
reaction_rate <- 50 / 100000  # annual incidence rate
weekly_reaction_rate <- reaction_rate / total_weeks
mortality_rate <- 0.01  # 1% death rate if untreated
# Expand the model to simulate weekly changes
results_list <- list()
for (i in 1:nrow(province_data)) {
province <- province_data$Province[i]
pop <- province_data$Population[i]
access <- province_data$AccessRate[i]
weekly_data <- data.frame(
Week = 1:total_weeks,
New_Reactions = rep(0, total_weeks),
Treated = rep(0, total_weeks),
Untreated = rep(0, total_weeks),
Deaths = rep(0, total_weeks),
Cum_Treated = rep(0, total_weeks),
Cum_Untreated = rep(0, total_weeks),
Cum_Deaths = rep(0, total_weeks)
)
for (week in 1:total_weeks) {
new_reactions <- floor(pop * weekly_reaction_rate)
treated <- floor(new_reactions * access)
untreated <- new_reactions - treated
deaths <- floor(untreated * mortality_rate)
weekly_data$New_Reactions[week] <- new_reactions
weekly_data$Treated[week] <- treated
weekly_data$Untreated[week] <- untreated
weekly_data$Deaths[week] <- deaths
if (week == 1) {
weekly_data$Cum_Treated[week] <- treated
weekly_data$Cum_Untreated[week] <- untreated
weekly_data$Cum_Deaths[week] <- deaths
} else {
weekly_data$Cum_Treated[week] <- weekly_data$Cum_Treated[week - 1] + treated
weekly_data$Cum_Untreated[week] <- weekly_data$Cum_Untreated[week - 1] + untreated
weekly_data$Cum_Deaths[week] <- weekly_data$Cum_Deaths[week - 1] + deaths
}
}
weekly_data$Province <- province
results_list[[province]] <- weekly_data
}
# Combine all provinces into one dataframe
all_results <- do.call(rbind, results_list)
# Plot cumulative treated and untreated cases over time for each province
ggplot(all_results, aes(x = Week)) +
geom_line(aes(y = Cum_Treated, color = "Treated")) +
geom_line(aes(y = Cum_Untreated, color = "Untreated"), linetype = "dashed") +
facet_wrap(~Province, scales = "free_y") +
labs(title = "Cumulative Anaphylaxis Outcomes by Province (Weekly Model)",
y = "Number of People", color = "Outcome") +
theme_minimal()
# Print final cumulative totals by province
final_totals <- all_results %>%
group_by(Province) %>%
summarise(
Total_Cases = sum(New_Reactions),
Treated = max(Cum_Treated),
Untreated = max(Cum_Untreated),
Deaths = max(Cum_Deaths)
)
print(final_totals)
